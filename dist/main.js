(()=>{"use strict";var n={917:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),a=t.n(r),o=t(645),s=t.n(o)()(a());s.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const i=s},426:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),a=t.n(r),o=t(645),s=t.n(o)()(a());s.push([n.id,":root{\n    --lv-1: #fff;\n    --lv0: #eee;\n    --lv1: #ccc;\n    --lv2: #444;\n    --tx1: black;\n    --tx2: white;\n    --br: 5px;\n}\n\n*{\n    box-sizing: border-box;\n}\n\nbody{\n    display: flex;\n    height: 100vh;\n    background-color: var(--lv0);\n    font-family: sans-serif;\n}\n\naside{\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    flex: 0 1 1;\n    width: 300px;\n    background-color: var(--lv1);\n    box-shadow: 2px 0 5px var(--lv1);\n    overflow: auto;\n    padding: 0 15px;\n}\n\n.general, .projects{\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\nh2{\n    font-size: 1.5rem;\n    text-align: center;\n    padding: 1px;\n}\n\nh1{\n    font-size: 2rem;\n}\n\n.select, .new-btn{\n    border-radius: var(--br);\n    background-color: var(--lv0);\n    transition: 0.1s;\n}\n\n.select{\n    padding: 10px 25px;\n    font-size: 1rem;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n}\n\n.select:hover, .new-btn:hover{\n    background-color: var(--lv2);\n    color: var(--tx2);\n}\n\nmain{\n    flex: 1 1 0;\n    overflow: auto;\n}\n\nbutton{\n    border: none;\n}\n\n.tab-title{\n    height: 50px;\n    background-color: var(--lv1);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    box-shadow: 2px 0 2px var(--lv1);\n}\n\n.new-btn{\n    width: 32px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 2rem;\n}\n\nmain>.taskholder{\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    padding: 30px 50px;\n}\n\n.task-short>input{\n    flex: 0 1 0;\n}\n\n.task-data{\n    flex: 1 1 0;\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n}\n\n.task{\n    background-color: var(--lv-1);\n    padding: 10px;\n    border-radius: var(--br);\n    box-shadow: 0 2px 2px var(--lv1);\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.task-short {\n    display: flex;\n    justify-content: space-between;\n    gap: 10px;\n}\n\n.task-expanded{\n    display: none;\n}\n\n.task-expanded.show{\n    display: grid;\n    grid-template: 3fr 1fr / 3fr 1fr;\n}\n\n.task-expanded>*{\n    display: flex;\n    align-items: center;\n}\n\n.task-desc{\n    grid-row: 1 / 4;\n    grid-column: 1 / 5;\n}\n\n.task-priority{\n    grid-column: 1 / 4\n}\n\n.task-delete-btn{\n    grid-column: 4 / 5;\n    font-size: 1.3rem;\n}\n\n.header{\n    height: 50px;\n    display: flex;\n    margin: 0 -15px;\n    align-items: center;\n    justify-content: center;\n    background-color: var(--lv2);\n    text-align: center;\n    color: var(--tx2);\n}\n\n.project{\n    border-radius: var(--br);\n    background-color: var(--lv0);\n    transition: 0.1s;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    position: relative;\n}\n\n.show-project, .delete-project{\n    background-color: transparent;\n    transition: 0.1s;\n    font-size: 1rem;\n}\n\n.show-project{\n    padding: 10px 10px 10px 25px;\n    border-radius: var(--br) 0 0 var(--br);\n    flex: 110;\n    text-align: left;\n}\n\n.delete-project{\n    padding: 10px;\n    border-radius: 0 var(--br) var(--br) 0;\n}\n\n.show-project:hover, .delete-project:hover{\n    background-color: var(--lv2);\n    color: var(--tx2);\n}\n\n.btn-container{\n    display: flex;\n    gap: 10px;\n}\n\n.red{\n    color: red;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,WAAW;IACX,WAAW;IACX,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,SAAS;AACb;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,aAAa;IACb,4BAA4B;IAC5B,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,WAAW;IACX,YAAY;IACZ,4BAA4B;IAC5B,gCAAgC;IAChC,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,4BAA4B;IAC5B,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,8BAA8B;IAC9B,kBAAkB;AACtB;;AAEA;IACI,4BAA4B;IAC5B,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,cAAc;AAClB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,4BAA4B;IAC5B,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,eAAe;IACf,gCAAgC;AACpC;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;IACX,mBAAmB;IACnB,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,6BAA6B;IAC7B,aAAa;IACb,wBAAwB;IACxB,gCAAgC;IAChC,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,SAAS;AACb;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI;AACJ;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,eAAe;IACf,mBAAmB;IACnB,uBAAuB;IACvB,4BAA4B;IAC5B,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,wBAAwB;IACxB,4BAA4B;IAC5B,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,kBAAkB;AACtB;;AAEA;IACI,6BAA6B;IAC7B,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,4BAA4B;IAC5B,sCAAsC;IACtC,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sCAAsC;AAC1C;;AAEA;IACI,4BAA4B;IAC5B,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,UAAU;AACd",sourcesContent:[":root{\n    --lv-1: #fff;\n    --lv0: #eee;\n    --lv1: #ccc;\n    --lv2: #444;\n    --tx1: black;\n    --tx2: white;\n    --br: 5px;\n}\n\n*{\n    box-sizing: border-box;\n}\n\nbody{\n    display: flex;\n    height: 100vh;\n    background-color: var(--lv0);\n    font-family: sans-serif;\n}\n\naside{\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    flex: 0 1 1;\n    width: 300px;\n    background-color: var(--lv1);\n    box-shadow: 2px 0 5px var(--lv1);\n    overflow: auto;\n    padding: 0 15px;\n}\n\n.general, .projects{\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\nh2{\n    font-size: 1.5rem;\n    text-align: center;\n    padding: 1px;\n}\n\nh1{\n    font-size: 2rem;\n}\n\n.select, .new-btn{\n    border-radius: var(--br);\n    background-color: var(--lv0);\n    transition: 0.1s;\n}\n\n.select{\n    padding: 10px 25px;\n    font-size: 1rem;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n}\n\n.select:hover, .new-btn:hover{\n    background-color: var(--lv2);\n    color: var(--tx2);\n}\n\nmain{\n    flex: 1 1 0;\n    overflow: auto;\n}\n\nbutton{\n    border: none;\n}\n\n.tab-title{\n    height: 50px;\n    background-color: var(--lv1);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    box-shadow: 2px 0 2px var(--lv1);\n}\n\n.new-btn{\n    width: 32px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 2rem;\n}\n\nmain>.taskholder{\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    padding: 30px 50px;\n}\n\n.task-short>input{\n    flex: 0 1 0;\n}\n\n.task-data{\n    flex: 1 1 0;\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n}\n\n.task{\n    background-color: var(--lv-1);\n    padding: 10px;\n    border-radius: var(--br);\n    box-shadow: 0 2px 2px var(--lv1);\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.task-short {\n    display: flex;\n    justify-content: space-between;\n    gap: 10px;\n}\n\n.task-expanded{\n    display: none;\n}\n\n.task-expanded.show{\n    display: grid;\n    grid-template: 3fr 1fr / 3fr 1fr;\n}\n\n.task-expanded>*{\n    display: flex;\n    align-items: center;\n}\n\n.task-desc{\n    grid-row: 1 / 4;\n    grid-column: 1 / 5;\n}\n\n.task-priority{\n    grid-column: 1 / 4\n}\n\n.task-delete-btn{\n    grid-column: 4 / 5;\n    font-size: 1.3rem;\n}\n\n.header{\n    height: 50px;\n    display: flex;\n    margin: 0 -15px;\n    align-items: center;\n    justify-content: center;\n    background-color: var(--lv2);\n    text-align: center;\n    color: var(--tx2);\n}\n\n.project{\n    border-radius: var(--br);\n    background-color: var(--lv0);\n    transition: 0.1s;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    position: relative;\n}\n\n.show-project, .delete-project{\n    background-color: transparent;\n    transition: 0.1s;\n    font-size: 1rem;\n}\n\n.show-project{\n    padding: 10px 10px 10px 25px;\n    border-radius: var(--br) 0 0 var(--br);\n    flex: 110;\n    text-align: left;\n}\n\n.delete-project{\n    padding: 10px;\n    border-radius: 0 var(--br) var(--br) 0;\n}\n\n.show-project:hover, .delete-project:hover{\n    background-color: var(--lv2);\n    color: var(--tx2);\n}\n\n.btn-container{\n    display: flex;\n    gap: 10px;\n}\n\n.red{\n    color: red;\n}"],sourceRoot:""}]);const i=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(s[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&s[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),s=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(s).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},s=[],i=0;i<n.length;i++){var A=n[i],c=r.base?A[0]+r.base:A[0],l=o[c]||0,d="".concat(c," ").concat(l);o[c]=l+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var C=a(u,r);r.byIndex=i,e.splice(i,0,{identifier:d,updater:C,references:1})}s.push(d)}return s}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<o.length;s++){var i=t(o[s]);e[i].references--}for(var A=r(n,a),c=0;c<o.length;c++){var l=t(o[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{class n{static checkStorage(){console.log(localStorage),0===localStorage.length?this.populateStorage():this.setOnlineData()}static populateStorage(){localStorage.setItem("allProjects",JSON.stringify(r.allProjects)),console.log(`allprojects: ${r.allProjects}`),console.log(`stringed: ${localStorage.getItem("allProjects")}`)}static setOnlineData(){const n=localStorage.getItem("allProjects");""===n&&(n="[]"),r.allProjects=JSON.parse(n),r.setMethods(),console.log(`allprojects: ${r.allProjects}`)}}class e{constructor(n){this.title=n,this.desc="",this.dueDate=null,this.priority="Low"}getTitle(){return this.title}setTitle(e){this.title=e,n.populateStorage()}getDesc(){return this.desc}setDesc(e){this.desc=e,n.populateStorage()}getDueDate(){return this.dueDate}setDueDate(e){this.dueDate=e,n.populateStorage()}getPriority(){return this.priority}setPriority(e){this.priority=e,n.populateStorage()}}class r{constructor(n){this.name=n,this.tasks=[]}static allProjects=[];static addProject(e){const t=this.allProjects;for(let n in t)if(t[n].name===e)return void alert("Project name can't be duplicate.");if(null===e)return;let a=new r(e);t.push(a),n.populateStorage()}static deleteProject(e){this.allProjects.splice(this.allProjects.indexOf(e),1),n.populateStorage()}static setMethods(){for(let t in this.allProjects){const r=this.allProjects[t];r.getName=function(n){return this.name},r.setName=function(e){null!==title&&(this.name=e,n.populateStorage())},r.newTask=function(t){null!==t&&(this.tasks.push(new e(t)),n.populateStorage())},r.deleteTask=function(e){const t=this.tasks.indexOf(e);this.tasks.splice(t,1),n.populateStorage()};for(let e in r.tasks){const t=r.tasks[e];console.log("the tasks:"),console.log(t),t.getTitle=function(){return this.title},t.setTitle=function(e){this.title=e,n.populateStorage()},t.getDesc=function(){return this.desc},t.setDesc=function(e){this.desc=e,n.populateStorage()},t.getDueDate=function(){return this.dueDate},t.setDueDate=function(e){this.dueDate=e,n.populateStorage()},t.getPriority=function(){return this.priority},t.setPriority=function(e){this.priority=e,n.populateStorage()}}}}getName(){return this.name}setName(e){this.name=e,n.populateStorage()}newTask(t){null!==t&&(this.tasks.push(new e(t)),n.populateStorage())}deleteTask(e){const t=this.tasks.indexOf(e);this.tasks.splice(t,1),n.populateStorage()}}class a{static cr(n){return document.createElement(n)}static qs(n){return document.querySelector(n)}static appChildren(n){for(let e=1;e<=arguments.length-1;e++)n.appendChild(arguments[e])}static etc(n,e){const t=this.cr(n);if(t.textContent=e,arguments[2])for(let n=2;n<arguments.length;n++)t.classList.add(arguments[n]);return t}}var o=t(379),s=t.n(o),i=t(795),A=t.n(i),c=t(569),l=t.n(c),d=t(565),p=t.n(d),u=t(216),C=t.n(u),f=t(589),h=t.n(f),g=t(917),b={};b.styleTagTransform=h(),b.setAttributes=p(),b.insert=l().bind(null,"head"),b.domAPI=A(),b.insertStyleElement=C(),s()(g.Z,b),g.Z&&g.Z.locals&&g.Z.locals;var v=t(426),m={};m.styleTagTransform=h(),m.setAttributes=p(),m.insert=l().bind(null,"head"),m.domAPI=A(),m.insertStyleElement=C(),s()(v.Z,m),v.Z&&v.Z.locals&&v.Z.locals,class{static render(){n.checkStorage();const e=a.qs("body");a.appChildren(e,this.makeSidebar())}static makeSidebar(){const n=a.cr("aside"),e=a.etc("div","","projects");return this.renderProjectSelectors(e),a.appChildren(n,a.etc("h1","To Do List","header"),a.etc("h2","Projects"),e,this.makeAddProjectBtn()),n}static projectBtn(n){const e=a.etc("div","","project"),t=a.etc("button",`${n.name}`,"show-project"),o=a.etc("button","×","delete-project");return o.addEventListener("click",(()=>{r.deleteProject(n),this.resetMain(),this.renderProjectSelectors()})),t.addEventListener("click",(()=>{this.renderProject(n)})),a.appChildren(e,t,o),e}static renderProjectSelectors(n){void 0===n&&(n=a.qs(".projects")),n.textContent="";for(let e in r.allProjects){const t=r.allProjects[e],a=this.projectBtn(t);n.appendChild(a)}}static makeAddProjectBtn(){const n=a.etc("button","+","new-btn");return n.addEventListener("click",(()=>{r.addProject(prompt("Enter project name: ")),this.renderProjectSelectors()})),n}static renderProject(n){const e=this.resetMain(),t=a.etc("div","","taskholder");for(let e in n.tasks)t.appendChild(this.renderTask(n.tasks[e],n));a.appChildren(e,this.makeTabTitle(n),t),a.qs("body").appendChild(e)}static makeTabTitle(n){const e=a.etc("h1",`${n.name}`,"tab-title"),t=a.etc("span","","btn-container"),r=a.etc("button","+","new-btn");return r.addEventListener("click",(()=>{n.newTask(prompt("title:")),this.renderProject(n)})),t.appendChild(r),e.appendChild(t),e}static resetMain(){a.qs("main")&&a.qs("main").remove();const n=a.cr("main");return n.textContent="",n}static renderTask(n,e){const t=a.etc("div","","task"),r=a.etc("div","","task-short"),o=a.etc("div","","task-data"),s=a.etc("div","","task-expanded"),i=a.cr("input");i.setAttribute("type","checkbox");const A=a.etc("p",`${n.getTitle()}`),c=a.etc("textarea",`${n.getDesc()}`,"task-desc"),l=a.etc("p","Priority: ","task-priority"),d=a.etc("button","🗑️","new-btn","task-delete-btn"),p=a.etc("button","↓","new-btn");return"High"===n.getPriority()?A.classList.add("red"):A.classList.remove("red"),p.addEventListener("click",(()=>{s.classList.toggle("show")})),d.addEventListener("click",(()=>{e.deleteTask(n),this.renderProject(e)})),c.addEventListener("input",(()=>{n.setDesc(c.value)})),a.appChildren(l,this.makePrioritySelector(n,A)),a.appChildren(o,A,this.makeDueDateSelector(n)),a.appChildren(r,i,o,p),a.appChildren(s,l,c,d),a.appChildren(t,r,s),t}static makePrioritySelector(n,e){const t=a.etc("select",""),r=a.etc("option","Low");r.value="Low";const o=a.etc("option","High");return o.value="High",a.appChildren(t,r,o),t.value=n.getPriority(),t.addEventListener("input",(()=>{n.setPriority(t.value),"High"===n.getPriority()?e.classList.add("red"):e.classList.remove("red")})),t}static makeDueDateSelector(n){const e=a.etc("input","");return e.setAttribute("type","date"),e.value=n.getDueDate(),e.addEventListener("input",(()=>{n.setDueDate(e.value)})),e}}.render()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,